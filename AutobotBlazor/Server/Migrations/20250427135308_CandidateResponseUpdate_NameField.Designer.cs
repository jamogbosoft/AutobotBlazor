// <auto-generated />
using AutobotBlazor.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutobotBlazor.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250427135308_CandidateResponseUpdate_NameField")]
    partial class CandidateResponseUpdate_NameField
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AutobotBlazor.Shared.Models.CandidateResponse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Bvm")
                        .HasColumnType("bit");

                    b.Property<string>("BvmStatus")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("CentreId")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<bool>("Connected")
                        .HasColumnType("bit");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EndTime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ExamDate")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousHostIps")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("SessionRef")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("TimedOut")
                        .HasColumnType("bit");

                    b.Property<string>("Timestamp")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TotalAttempted")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CandidateResponses");
                });

            modelBuilder.Entity("AutobotBlazor.Shared.Models.ExamTime", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("HostIPId")
                        .HasColumnType("bigint");

                    b.Property<string>("date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HostIPId");

                    b.ToTable("ExamTimes");
                });

            modelBuilder.Entity("AutobotBlazor.Shared.Models.ExamType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("HostIPId")
                        .HasColumnType("bigint");

                    b.Property<string>("oid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HostIPId");

                    b.ToTable("ExamTypes");
                });

            modelBuilder.Entity("AutobotBlazor.Shared.Models.HostIP", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CandidateResponseId")
                        .HasColumnType("bigint");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CandidateResponseId");

                    b.ToTable("HostIPs");
                });

            modelBuilder.Entity("AutobotBlazor.Shared.Models.ExamTime", b =>
                {
                    b.HasOne("AutobotBlazor.Shared.Models.HostIP", "HostIP")
                        .WithMany()
                        .HasForeignKey("HostIPId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HostIP");
                });

            modelBuilder.Entity("AutobotBlazor.Shared.Models.ExamType", b =>
                {
                    b.HasOne("AutobotBlazor.Shared.Models.HostIP", "HostIP")
                        .WithMany()
                        .HasForeignKey("HostIPId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HostIP");
                });

            modelBuilder.Entity("AutobotBlazor.Shared.Models.HostIP", b =>
                {
                    b.HasOne("AutobotBlazor.Shared.Models.CandidateResponse", "CandidateResponse")
                        .WithMany("HostIPs")
                        .HasForeignKey("CandidateResponseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CandidateResponse");
                });

            modelBuilder.Entity("AutobotBlazor.Shared.Models.CandidateResponse", b =>
                {
                    b.Navigation("HostIPs");
                });
#pragma warning restore 612, 618
        }
    }
}
